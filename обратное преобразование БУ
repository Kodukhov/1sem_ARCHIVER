#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h> 

enum { MAX_STR_SIZE = 100 };

void printmat(char* word, int n)
{
	int i, j;
	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
		{
			printf("%c", *(word + i*n + j));
		}
		printf("\n");
	}
	printf("====================\n");
}

void sort_strings(char* word, int n)
{
	qsort(word, n, n, strcmp);
}

void add_column(char* mas,char* a, int n, int k)//добавление к (mas) столбца (а) на место (к) n-размеры
{
	int i;
	for (i = 0; i < n; i++)
	{
		*(mas + i*n + k) = *(a + i);
	}
}

void createmat(char* mas, char* a,int n)
{
	int i;
	for (i = 0; i < n; i++)
	{
		//printmat(mas, n);
		add_column(mas, a, n, (n - 1 - i));
		//printmat(mas, n);
		sort_strings(mas, n);
	}
}

void rightline(char* word,char* a, int n)
{
	int i, j;
	for (i = 0; i < n; i++)
	{
		if (*(word + i*n + (n -1)) == '$')
		{
			//printf("i vibral ety %d\n", (i+1));
			for (j = 0; j < n; j++)
			{
				*(a + j) = *(word + i*n + j);
			}
			break;
		}
	}
}

int main()
{
	char str[MAX_STR_SIZE];
	memset(str, '>', MAX_STR_SIZE);
	fgets(str, MAX_STR_SIZE, stdin);
	int str_size = strlen(str)-1;

	int i, j;
	
	char* string = malloc(sizeof(char)*str_size);
	for (i = 0; i < str_size; i++)
	{
		*(string + i) = str[i];
		//printf("%c", *(string + i));
	}
	//printf("\n");
	
	char* mas = malloc(sizeof(char)*str_size*str_size);
	for (i = 0; i < str_size; i++)
	{
		for (j = 0; j < str_size; j++)
		{
			*(mas + i*str_size + j) = '^';
		}
	}

	createmat(mas, string, str_size);
	rightline(mas, string, str_size);

	for (i = 0; i < str_size; i++)
		printf("%c", *(string + i));
	printf("\n");
	
	free(mas);
	free(string);
	system("Pause");
	return 0;
}
