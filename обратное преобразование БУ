#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void printmat(char* word, int n)
{
	int i, j;
	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
		{
			printf("%c", *(word + i*n + j));
		}
		printf("\n");
	}
	printf("====================\n");
}

void sort_strings(char* word, int n)
{
	char *s1 = malloc(sizeof(char)*(n+1));
	char *s2 = malloc(sizeof(char)*(n+1));
	int mis = 1, i, j, srav;
	*(s1 + n) = *(s2 + n) = '\n';
	while (mis != 0)
	{
		mis = 0;
		for (i = 0; i < (n-1); i++)
		{
			for (j = 0; j < (n); j++)
			{
				*(s1 + j) = *(word + i*n + j);
				*(s2 + j) = *(word + (i + 1)*n + j);
			}
			
			srav = strcmp(s1, s2);
			printf("sortirovka srav =%d", srav);
			if (srav > 0)
			{
				mis = mis + 1;
				for (j = 0; j < n; j++)
				{
					*(word + i*n + j) = *(s2 + j);
					*(word + (i + 1)*n + j) = *(s1 + j);
				}
			}
		}
	}
	free(s1);
	free(s2);
}

void add_column(char* mas,char* a, int n, int k)//добавление к (mas) столбца (а) на место (к) n-размеры
{
	int i;
	for (i = 0; i < n; i++)
	{
		*(mas + i*n + k) = *(a + i);
	}
}

void createmat(char* mas, char* a,int n)
{
	int i;
	for (i = 0; i < n; i++)
	{
		printmat(mas, n);
		add_column(mas, a, n, (n - 1 - i));
		printmat(mas, n);
		sort_strings(mas, n);
		printmat(mas, n);
	}
}

void rightline(char* word, char* a, int n)
{
	int i, j;
	for (i = 0; i < n; i++)
	{
		if (*(word + i*n + (n - 1)) == '~')
		{
			for (j = 0; j < n; j++)
			{
				*(a + j) = *(word + i*n + j);
			}
		}
	}
}



int main()
{
	char a[100];
	int i, j;
	int num=0;
	for (i = 0; i < 100; i++)
	{
		a[i] = '^';
	}
	scanf("%c", &a[0]);
	while (a[num] != '\n')
	{
		num++;
		scanf("%c", &a[num]);
		
	}
	
	//num = num - 1;
	//printf("%d\n", num);
	for (i = 0; i < num; i++)
	{
		printf("%c", a[i]);
		if (a[i] == '\n')
		{
			printf("CYKa");
		}
	}
	for (i = 0; i < num; i++)
	{
		if (a[i] == '$')
		{
			a[i] = '~';
		}
		if (a[i] == '.')
		{
			a[i] = ']';
		}
	}
	char* string = malloc(sizeof(char)*num);
	for (i = 0; i < num; i++)
	{
		*(string + i) = a[i];
		printf("%c", *(string + i));
	}
	printf("\n");
	
	char* mas = malloc(sizeof(char)*num*num);
	for (i = 0; i < num; i++)
	{
		for (j = 0; j < num; j++)
		{
			*(mas + i*num + j) = '^';
		}
	}

	createmat(mas, string, num);
	rightline(mas, string, num);
	*(string + (num - 1)) = '\n';
	for (i = 0; i < num; i++)
	{
		if (*(string + i) == ']')
		{
			*(string + i) = '.';
		}
		printf("%c", *(string + i));
	}
	
	printf("\n");
	free(mas);
	free(string);
	system("Pause");
	return 0;
}
