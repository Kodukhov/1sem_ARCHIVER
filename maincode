#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int numofel(char a[])
{
	int n = 0;
	while (a[n]!='>')
	{
		n++;
	}
	return (n);
}

void sort_strings(char* word, int n)
{
	char *s1 = malloc(sizeof(char)*n);
	char *s2 = malloc(sizeof(char)*n);
	int mis = 1, i, j,srav;

	while (mis != 0)
	{
		mis = 0;
		for (i = 0; i < (n-1); i++)
		{
			for (j = 0; j < n; j++)
			{
				*(s1+j) = *(word + i*n + j);
				*(s2+j) = *(word + (i + 1)*n + j);
			}

			srav = strcmp(s1, s2);
			if (srav > 0)
			{
				mis = mis + 1;
				for (j = 0; j < n; j++)
				{
					*(word + i*n + j) = *(s2+j);
					*(word + (i + 1)*n + j) = *(s1+j);
				}
			}
		}
	}
	free(s1);
	free(s2);
}

int main()
{
	char s[50];
	int i = 0,j,n,k,num;

	for (i = 0; i < 50; i++)
	{
		s[i] = '>';
	}
	
	scanf("%s", &s);
	num = 0;
	
	while (s[num+1] != '>')
	{
		num=num+1;
		
	}
	n = (num);
	char* word = malloc(sizeof(char)*n*n);

	for (i = 0; i < n; i++)
	{
		for (j = i; j < n; j++)
		{
			*(word + n*i+j) = s[j-i];
		}
		for (k = 0; k < i; k++)
		{
			*(word + n*i + k) = s[n - i + k];
		}
	}
	
	sort_strings(word, n);
	
	char* preob = malloc(sizeof(char)*n);
	for (i = 0; i < n; i++)
	{
		*(preob + i) = *(word + i*n + (n - 1));
		printf("%c", *(preob + i));
	}
	printf("\n");
	free(preob);
	free(word);
	system("Pause");
	return 0;
}
